component capto "Compute the offsets required to machine the Capto polygon";

pin in bit enable "Enables the offsets, and zeros them when false";
pin in float spindle-revs "Should increase by 1.0 for every spindle revolution";
pin in float spindle-offset "Use to align spindle position to machine axes";
pin in unsigned capto-size = 0 "0 = C3/32, 1 = C4/40...4=C8/80, 5=C9/100";
pin in float counts-scale = 10000 "offset counts scaling";
pin in bit enable-taper = 0 "set to true to taper at the specified angle from Z = 0";
pin in float z-pos-rel "connect to halui.axis.z.pos-relative for taper calcs";

pin out float dx "Offset from base cicrcle in x direction";
pin out float dy "Offset from base circle in y direction";
pin out float dr "offset from base circel in r direction";

pin out signed dx-counts "counts output for external offsets";
pin out signed dy-counts "counts output for external offsets";
pin out signed dr-counts "counts output for external offsets";

pin out float q "0-1 turns";
pin out signed i "index into array";
pin out float f "remainder";

license "GPL2+";
author "andypugh";
function _;

;;

#include "rtapi_math.h"

FUNCTION(_){
double a;
/* Capto offsets for 100 equally spaced steps around a full circle */
static const double X[6][101] = {{-0.7, -0.6909, -0.6639, -0.6197,
    -0.5593, -0.4845, -0.3973, -0.3003, -0.1965, -0.0894, 0.0171, 
    0.1184, 0.2097, 0.2858, 0.3411, 0.3703, 0.3687, 0.3358, 0.2785, 
    0.2098, 0.1417, 0.0825, 0.0372, 0.0081, -0.004, 0, 0.0187, 0.0498, 
    0.0906, 0.1384, 0.19, 0.2423, 0.2922, 0.3368, 0.3732, 0.3989, 
    0.4113, 0.4086, 0.3891, 0.3515, 0.2954, 0.2207, 0.1283, 0.0199, 
    -0.1014, -0.2312, -0.3633, -0.4891, -0.597, -0.6724, -0.7, -0.6724, 
    -0.597, -0.4891, -0.3633, -0.2312, -0.1014, 0.0199, 0.1283, 0.2207, 
    0.2954, 0.3515, 0.3891, 0.4086, 0.4113, 0.3989, 0.3732, 0.3368, 
    0.2922, 0.2423, 0.19, 0.1384, 0.0906, 0.0498, 0.0187, 0, -0.004, 
    0.0081, 0.0372, 0.0825, 0.1417, 0.2098, 0.2785, 0.3358, 0.3687, 
    0.3703, 0.3411, 0.2858, 0.2097, 0.1184, 0.0171, -0.0894, -0.1965, 
    -0.3003, -0.3973, -0.4845, -0.5593, -0.6197, -0.6639, -0.6909, 
    -0.7},
    // Size 40 Dm = 28, e =0.9
    {-0.9, -0.8884, -0.8538, -0.7971, -0.7197, -0.6238, -0.512, -0.3876,
    -0.2544, -0.1168, 0.0199, 0.1502, 0.2677, 0.3659, 0.4376, 0.4756, 
    0.474, 0.4317, 0.3579, 0.2693, 0.1815, 0.1055, 0.0473, 0.0101, 
    -0.0053, 0, 0.0241, 0.0641, 0.1167, 0.1781, 0.2444, 0.3116, 0.3757, 
    0.433, 0.4799, 0.5129, 0.529, 0.5257, 0.5008, 0.4529, 0.381, 
    0.2853, 0.1668, 0.0278, -0.1279, -0.2948, -0.4648, -0.627, -0.7665, 
    -0.8642, -0.9, -0.8642, -0.7665, -0.627, -0.4648, -0.2948, -0.1279, 
    0.0278, 0.1668, 0.2853, 0.381, 0.4529, 0.5008, 0.5257, 0.529, 
    0.5129, 0.4799, 0.433, 0.3757, 0.3116, 0.2444, 0.1781, 0.1167, 
    0.0641, 0.0241, 0, -0.0053, 0.0101, 0.0473, 0.1055, 0.1815, 0.2693, 
    0.3579, 0.4317, 0.474, 0.4756, 0.4376, 0.3659, 0.2677, 0.1502, 
    0.0199, -0.1168, -0.2544, -0.3876, -0.512, -0.6238, -0.7197, 
    -0.7971, -0.8538, -0.8884, -0.9},
    // Size 50 Dm = 35 e = 1.12
    {-1.12, -1.1055, -1.0624, -0.9917, -0.8953, -0.7758, -0.6365, 
    -0.4815, -0.3156, -0.1443, 0.0259, 0.188, 0.3342, 0.4562, 0.5451, 
    0.5921, 0.5899, 0.5372, 0.4455, 0.3354, 0.2263, 0.1316, 0.0591, 
    0.0128, -0.0066, 0, 0.0299, 0.0797, 0.1451, 0.2215, 0.304, 0.3877, 
    0.4676, 0.5389, 0.5972, 0.6382, 0.6583, 0.654, 0.6229, 0.5631, 
    0.4735, 0.3542, 0.2066, 0.0334, -0.1605, -0.3682, -0.5797, -0.7812, 
    -0.9544, -1.0756, -1.12, -1.0756, -0.9544, -0.7812, -0.5797, 
    -0.3682, -0.1605, 0.0334, 0.2066, 0.3542, 0.4735, 0.5631, 0.6229, 
    0.654, 0.6583, 0.6382, 0.5972, 0.5389, 0.4676, 0.3877, 0.304, 
    0.2215, 0.1451, 0.0797, 0.0299, 0, -0.0066, 0.0128, 0.0591, 0.1316, 
    0.2263, 0.3354, 0.4455, 0.5372, 0.5899, 0.5921, 0.5451, 0.4562, 
    0.3342, 0.188, 0.0259, -0.1443, -0.3156, -0.4815, -0.6365, -0.7758, 
    -0.8953, -0.9917, -1.0624, -1.1055, -1.12},
    // Size 63 Dm = 44 e = 1.4
    {-1.4, -1.3818, -1.3278, -1.2393, -1.1187, -0.969, -0.7946, 
    -0.6006, -0.3929, -0.1787, 0.0341, 0.2367, 0.4193, 0.5715, 0.6823, 
    0.7406, 0.7375, 0.6716, 0.5571, 0.4196, 0.2834, 0.165, 0.0743, 
    0.0162, -0.0081, 0, 0.0373, 0.0995, 0.1812, 0.2767, 0.3799, 0.4845, 
    0.5844, 0.6736, 0.7465, 0.7977, 0.8227, 0.8172, 0.7781, 0.7031, 
    0.5908, 0.4414, 0.2565, 0.0398, -0.2028, -0.4624, -0.7266, -0.9781, 
    -1.194, -1.3448, -1.4, -1.3448, -1.194, -0.9781, -0.7266, -0.4624, 
    -0.2028, 0.0398, 0.2565, 0.4414, 0.5908, 0.7031, 0.7781, 0.8172, 
    0.8227, 0.7977, 0.7465, 0.6736, 0.5844, 0.4845, 0.3799, 0.2767, 
    0.1812, 0.0995, 0.0373, 0, -0.0081, 0.0162, 0.0743, 0.165, 0.2834, 
    0.4196, 0.5571, 0.6716, 0.7375, 0.7406, 0.6823, 0.5715, 0.4193, 
    0.2367, 0.0341, -0.1787, -0.3929, -0.6006, -0.7946, -0.969, 
    -1.1187, -1.2393, -1.3278, -1.3818, -1.4},
    // Size 80 (and 80x) Dm = 55 e = 2
    {-2, -1.9753, -1.9017, -1.7809, -1.616, -1.4109, -1.1711, -0.903, 
    -0.6145, -0.3148, -0.0141, 0.2756, 0.5413, 0.7684, 0.9408, 1.041, 
    1.0504, 0.9587, 0.7871, 0.5827, 0.3846, 0.2165, 0.091, 0.0133, 
    -0.0161, 0, 0.0567, 0.1474, 0.2648, 0.4007, 0.5468, 0.6946, 0.8358, 
    0.9624, 1.0667, 1.1416, 1.1806, 1.1782, 1.1296, 1.0313, 0.8812, 
    0.6788, 0.4255, 0.1253, -0.2147, -0.5839, -0.9661, -1.3386, 
    -1.6685, -1.9087, -2, -1.9087, -1.6685, -1.3386, -0.9661, -0.5839, 
    -0.2147, 0.1253, 0.4255, 0.6788, 0.8812, 1.0313, 1.1296, 1.1782, 
    1.1806, 1.1416, 1.0667, 0.9624, 0.8358, 0.6946, 0.5468, 0.4007, 
    0.2648, 0.1474, 0.0567, 0, -0.0161, 0.0133, 0.091, 0.2165, 0.3846, 
    0.5827, 0.7871, 0.9587, 1.0504, 1.041, 0.9408, 0.7684, 0.5413, 
    0.2756, -0.0141, -0.3148, -0.6145, -0.903, -1.1711, -1.4109, 
    -1.616, -1.7809, -1.9017, -1.9753, -2},
    // Size 100 Dm=72 e = 2.8
    {-2.8, -2.7663, -2.6658, -2.5009, -2.2754, -1.9947, -1.6658, 
    -1.2975, -0.8999, -0.4853, -0.0676, 0.3375, 0.7122, 1.0366, 1.2884, 
    1.4419, 1.4674, 1.3414, 1.0939, 0.8012, 0.5218, 0.2878, 0.1155, 
    0.011, -0.0261, 0, 0.0819, 0.2103, 0.375, 0.5649, 0.7684, 0.9741, 
    1.1708, 1.3474, 1.4936, 1.5997, 1.6568, 1.6573, 1.5945, 1.4635, 
    1.2611, 0.986, 0.6399, 0.2273, -0.2431, -0.7574, -1.2949, -1.8251, 
    -2.303, -2.6602, -2.8, -2.6602, -2.303, -1.8251, -1.2949, -0.7574, 
    -0.2431, 0.2273, 0.6399, 0.986, 1.2611, 1.4635, 1.5945, 1.6573, 
    1.6568, 1.5997, 1.4936, 1.3474, 1.1708, 0.9741, 0.7684, 0.5649, 
    0.375, 0.2103, 0.0819, 0, -0.0261, 0.011, 0.1155, 0.2878, 0.5218, 
    0.8012, 1.0939, 1.3414, 1.4674, 1.4419, 1.2884, 1.0366, 0.7122, 
    0.3375, -0.0676, -0.4853, -0.8999, -1.2975, -1.6658, -1.9947, 
    -2.2754, -2.5009, -2.6658, -2.7663, -2.8}};
    
static const double Y[6][101] = {{0, -0.0435, -0.0839, -0.1182, -0.1436,
    -0.1574, -0.1573, -0.1413, -0.108, -0.0567, 0.0124, 0.0979, 0.1969, 
    0.3043, 0.4124, 0.5097, 0.581, 0.6108, 0.5919, 0.5299, 0.4361, 
    0.3213, 0.1948, 0.0643, -0.0642, -0.1858, -0.2967, -0.3938, -0.475, 
    -0.5389, -0.5846, -0.6119, -0.621, -0.6127, -0.5881, -0.549, 
    -0.4972, -0.4351, -0.3654, -0.2908, -0.2146, -0.14, -0.0705, 
    -0.0094, 0.0401, 0.0751, 0.0933, 0.0933, 0.0754, 0.0423, 0, 
    -0.0423, -0.0754, -0.0933, -0.0933, -0.0751, -0.0401, 0.0094, 
    0.0705, 0.14, 0.2146, 0.2908, 0.3654, 0.4351, 0.4972, 0.549, 
    0.5881, 0.6127, 0.621, 0.6119, 0.5846, 0.5389, 0.475, 0.3938, 
    0.2967, 0.1858, 0.0642, -0.0643, -0.1948, -0.3213, -0.4361, 
    -0.5299, -0.5919, -0.6108, -0.581, -0.5097, -0.4124, -0.3043, 
    -0.1969, -0.0979, -0.0124, 0.0567, 0.108, 0.1413, 0.1573, 0.1574, 
    0.1436, 0.1182, 0.0839, 0.0435, 0},
    // 40
    {0, -0.0559, -0.1079, -0.152, -0.1848, -0.2027, -0.2027, -0.1824, 
    -0.1398, -0.0741, 0.0145, 0.1242, 0.2514, 0.3897, 0.5289, 0.6546, 
    0.7469, 0.7853, 0.7605, 0.6801, 0.5587, 0.4107, 0.2479, 0.0801, 
    -0.085, -0.241, -0.3832, -0.5077, -0.6118, -0.6936, -0.7521, 
    -0.7869, -0.7985, -0.7877, -0.7562, -0.7059, -0.6395, -0.5598, 
    -0.4703, -0.3746, -0.2768, -0.1811, -0.0917, -0.0131, 0.0506, 
    0.0958, 0.1193, 0.1196, 0.0968, 0.0544, 0, -0.0544, -0.0968, 
    -0.1196, -0.1193, -0.0958, -0.0506, 0.0131, 0.0917, 0.1811, 0.2768, 
    0.3746, 0.4703, 0.5598, 0.6395, 0.7059, 0.7562, 0.7877, 0.7985, 
    0.7869, 0.7521, 0.6936, 0.6118, 0.5077, 0.3832, 0.241, 0.085, 
    -0.0801, -0.2479, -0.4107, -0.5587, -0.6801, -0.7605, -0.7853, 
    -0.7469, -0.6546, -0.5289, -0.3897, -0.2514, -0.1242, -0.0145, 
    0.0741, 0.1398, 0.1824, 0.2027, 0.2027, 0.1848, 0.152, 0.1079, 
    0.0559, 0},
    // 50
    {0, -0.0696, -0.1342, -0.1892, -0.2299, -0.2521, -0.252, -0.2266, 
    -0.1735, -0.0916, 0.0188, 0.1555, 0.3138, 0.4858, 0.6589, 0.815, 
    0.9296, 0.9773, 0.9467, 0.847, 0.6964, 0.5124, 0.31, 0.1011, 
    -0.1044, -0.2988, -0.4759, -0.6311, -0.7608, -0.8628, -0.9357, 
    -0.9791, -0.9936, -0.9803, -0.941, -0.8785, -0.7957, -0.6965, 
    -0.585, -0.4658, -0.344, -0.2248, -0.1136, -0.0157, 0.0636, 0.1196, 
    0.1488, 0.149, 0.1206, 0.0677, 0, -0.0677, -0.1206, -0.149, 
    -0.1488, -0.1196, -0.0636, 0.0157, 0.1136, 0.2248, 0.344, 0.4658, 
    0.585, 0.6965, 0.7957, 0.8785, 0.941, 0.9803, 0.9936, 0.9791, 
    0.9357, 0.8628, 0.7608, 0.6311, 0.4759, 0.2988, 0.1044, -0.1011, 
    -0.31, -0.5124, -0.6964, -0.847, -0.9467, -0.9773, -0.9296, -0.815, 
    -0.6589, -0.4858, -0.3138, -0.1555, -0.0188, 0.0916, 0.1735, 
    0.2266, 0.252, 0.2521, 0.2299, 0.1892, 0.1342, 0.0696, 0},
    // 63
    {0, -0.0869, -0.1677, -0.2364, -0.2872, -0.3149, -0.3146, -0.2826, 
    -0.216, -0.1134, 0.0248, 0.1958, 0.3938, 0.6086, 0.8247, 1.0194, 
    1.1621, 1.2216, 1.1838, 1.0599, 0.8721, 0.6426, 0.3897, 0.1286, 
    -0.1284, -0.3717, -0.5934, -0.7876, -0.9501, -1.0778, -1.1692, 
    -1.2238, -1.242, -1.2253, -1.1763, -1.098, -0.9944, -0.8703, 
    -0.7307, -0.5816, -0.4292, -0.2801, -0.141, -0.0187, 0.0803, 
    0.1502, 0.1866, 0.1866, 0.1508, 0.0846, 0, -0.0846, -0.1508, 
    -0.1866, -0.1866, -0.1502, -0.0803, 0.0187, 0.141, 0.2801, 0.4292, 
    0.5816, 0.7307, 0.8703, 0.9944, 1.098, 1.1763, 1.2253, 1.242, 
    1.2238, 1.1692, 1.0778, 0.9501, 0.7876, 0.5934, 0.3717, 0.1284, 
    -0.1286, -0.3897, -0.6426, -0.8721, -1.0599, -1.1838, -1.2216, 
    -1.1621, -1.0194, -0.8247, -0.6086, -0.3938, -0.1958, -0.0248, 
    0.1134, 0.216, 0.2826, 0.3146, 0.3149, 0.2872, 0.2364, 0.1677, 
    0.0869, 0},
    // 80 & 80X
    {0, -0.1243, -0.2402, -0.3397, -0.4149, -0.4584, -0.4637, -0.4249, 
    -0.3378, -0.1998, -0.0103, 0.228, 0.5083, 0.8182, 1.1373, 1.4328, 
    1.6551, 1.7438, 1.6727, 1.4717, 1.1836, 0.8432, 0.4769, 0.105, 
    -0.2565, -0.5951, -0.9011, -1.1671, -1.3881, -1.5606, -1.6828, 
    -1.7543, -1.7762, -1.7506, -1.6808, -1.5713, -1.4271, -1.2546, 
    -1.0608, -0.8532, -0.6402, -0.4308, -0.2339, -0.059, 0.085, 0.1897, 
    0.2481, 0.2554, 0.2108, 0.1201, 0, -0.1201, -0.2108, -0.2554, 
    -0.2481, -0.1897, -0.085, 0.059, 0.2339, 0.4308, 0.6402, 0.8532, 
    1.0608, 1.2546, 1.4271, 1.5713, 1.6808, 1.7506, 1.7762, 1.7543, 
    1.6828, 1.5606, 1.3881, 1.1671, 0.9011, 0.5951, 0.2565, -0.105, 
    -0.4769, -0.8432, -1.1836, -1.4717, -1.6727, -1.7438, -1.6551, 
    -1.4328, -1.1373, -0.8182, -0.5083, -0.228, 0.0103, 0.1998, 0.3378, 
    0.4249, 0.4637, 0.4584, 0.4149, 0.3397, 0.2402, 0.1243, 0},
    // 100
    {0, -0.174, -0.3368, -0.4771, -0.5842, -0.6481, -0.6596, -0.6105, 
    -0.4947, -0.308, -0.0491, 0.2792, 0.6688, 1.1039, 1.5574, 1.9847, 
    2.3122, 2.4399, 2.3246, 2.0236, 1.6058, 1.121, 0.6056, 0.0868, 
    -0.4142, -0.881, -1.301, -1.6648, -1.9659, -2.2, -2.3649, -2.4604, 
    -2.488, -2.4509, -2.3535, -2.2017, -2.0027, -1.7648, -1.4974, 
    -1.2108, -0.9162, -0.6258, -0.3518, -0.1069, 0.0963, 0.2461, 
    0.3325, 0.3481, 0.2909, 0.1674, 0, -0.1674, -0.2909, -0.3481, 
    -0.3325, -0.2461, -0.0963, 0.1069, 0.3518, 0.6258, 0.9162, 1.2108, 
    1.4974, 1.7648, 2.0027, 2.2017, 2.3535, 2.4509, 2.488, 2.4604, 
    2.3649, 2.2, 1.9659, 1.6648, 1.301, 0.881, 0.4142, -0.0868, 
    -0.6056, -1.121, -1.6058, -2.0236, -2.3246, -2.4399, -2.3122, 
    -1.9847, -1.5574, -1.1039, -0.6688, -0.2792, 0.0491, 0.308, 0.4947, 
    0.6105, 0.6596, 0.6481, 0.5842, 0.4771, 0.3368, 0.174, 0}};
    
static const double R[6][101] = {{-0.7,-0.6923,-0.6692,-0.6308,
    -0.5775, -0.5095, -0.4273, -0.3319, -0.2242, -0.1058, 0.0211, 0.1536,
    0.2876, 0.4174, 0.5352, 0.63, 0.6882, 0.697, 0.6542, 0.57, 0.4585,
    0.3317, 0.1984, 0.0648, -0.0643, -0.1858, -0.2973, -0.3969, -0.4836,
    -0.5564, 
    -0.6147, -0.6581, -0.6863, -0.6991, -0.6966, -0.6786, -0.6453, -0.5969,
    -0.5337, -0.4562, -0.3651, -0.2614, -0.1464, -0.022, 0.109, 0.2431,
    0.3751, 0.4979, 0.6017, 0.6737, 0.7, 0.6737, 0.6017, 0.4979, 0.3751, 
    0.2431, 0.109, -0.022, -0.1464, -0.2614, -0.3651, -0.4562, -0.5337,
    -0.5969, -0.6453, -0.6786, -0.6966, -0.6991, -0.6863, -0.6581, -0.6147,
    -0.5564, -0.4836, -0.3969, -0.2973, -0.1858, -0.0643, 0.0648, 0.1984,
    0.3317, 0.4585, 0.57, 0.6542, 0.697, 0.6882, 0.63, 0.5352, 0.4174,
    0.2876, 0.1536, 0.0211, -0.1058, -0.2242, -0.3319, -0.4273, -0.5095,
    -0.5775, -0.6308, -0.6692, -0.6923, -0.7},  
    // 40
    {-0.9, -0.8901, -0.8605, -0.8114, -0.7431, -0.6559, -0.5507, -0.4283,
    -0.2903, -0.1384, 0.0246, 0.1949, 0.3673, 0.5345, 0.6865, 0.8091,
    0.8846, 0.8961, 0.8405, 0.7314, 0.5875, 0.424, 0.2524, 0.0808, -0.0851,
    -0.241, -0.384, -0.5118, -0.6228, -0.7161, -0.7908, -0.8463, -0.8824,
    -0.8989, -0.8956, -0.8726, -0.83, -0.768, -0.687, -0.5877, -0.471,
    -0.3379, -0.1904, -0.0308, 0.1376, 0.31, 0.4799, 0.6383, 0.7726, 0.8659,
    0.9, 0.8659, 0.7726, 0.6383, 0.4799, 0.31, 0.1376, -0.0308, -0.1904,
    -0.3379, -0.471, -0.5877, -0.687, -0.768, -0.83, -0.8726, -0.8956,
    -0.8989, -0.8824, -0.8463, -0.7908, -0.7161, -0.6228, -0.5118, -0.384,
    -0.241, -0.0851, 0.0808, 0.2524, 0.424, 0.5875, 0.7314, 0.8405, 0.8961,
    0.8846, 0.8091, 0.6865, 0.5345, 0.3673, 0.1949, 0.0246, -0.1384,
    -0.2903, -0.4283, -0.5507, -0.6559, -0.7431, -0.8114, -0.8605, -0.8901,
    -0.9}, 
    // 50
    {-1.12, -1.1077, -1.0708, -1.0096, -0.9244, -0.8158, -0.6846, -0.5322,
    -0.3601, -0.1709, 0.032, 0.2439, 0.4584, 0.6664, 0.8552, 1.0074, 1.1009,
    1.1152, 1.0463, 0.911, 0.7322, 0.529, 0.3155, 0.1019, -0.1046, -0.2988,
    -0.4769, -0.6361, -0.7745, -0.8907, -0.9838, -1.0531, -1.0981, -1.1186,
    -1.1145, -1.0858, -1.0327, -0.9554, -0.8545, -0.7308, -0.5852, -0.4195,
    -0.2357, -0.0369, 0.1726, 0.3872, 0.5985, 0.7953, 0.962, 1.0777, 1.12,
    1.0777, 0.962, 0.7953, 0.5985, 0.3872, 0.1726, -0.0369, -0.2357, -0.4195,
    -0.5852, -0.7308, -0.8545, -0.9554, -1.0327, -1.0858, -1.1145, -1.1186,
    -1.0981, -1.0531, -0.9838, -0.8907, -0.7745, -0.6361, -0.4769, -0.2988,
    -0.1046, 0.1019, 0.3155, 0.529, 0.7322, 0.911, 1.0463, 1.1152, 1.1009,
    1.0074, 0.8552, 0.6664, 0.4584, 0.2439, 0.032, -0.1709, -0.3601,
    -0.5322, -0.6846, -0.8158, -0.9244, -1.0096, -1.0708, -1.1077, -1.12},
    // 63
    {-1.4, -1.3846, -1.3384, -1.2617, -1.1549, -1.0189, -0.8547, -0.6637,
    -0.4484, -0.2117, 0.0422, 0.3072, 0.5752, 0.8349, 1.0704, 1.26, 1.3763,
    1.394, 1.3084, 1.1399, 0.917, 0.6634, 0.3967, 0.1296, -0.1287, -0.3717,
    -0.5945, -0.7939, -0.9672, -1.1128, -1.2294, -1.3162, -1.3726, -1.3983,
    -1.3931, -1.3572, -1.2906, -1.1938, -1.0675, -0.9125, -0.7302, -0.5227,
    -0.2927, -0.044, 0.2181, 0.4862, 0.7501, 0.9958, 1.2035, 1.3475, 1.4,
    1.3475, 1.2035, 0.9958, 0.7501, 0.4862, 0.2181, -0.044, -0.2927,
    -0.5227, -0.7302, -0.9125, -1.0675, -1.1938, -1.2906, -1.3572, -1.3931,
    -1.3983, -1.3726, -1.3162, -1.2294, -1.1128, -0.9672, -0.7939, -0.5945,
    -0.3717, -0.1287, 0.1296, 0.3967, 0.6634, 0.917, 1.1399, 1.3084, 1.394,
    1.3763, 1.26, 1.0704, 0.8349, 0.5752, 0.3072, 0.0422, -0.2117, -0.4484,
    -0.6637, -0.8547, -1.0189, -1.1549, -1.2617, -1.3384, -1.3846, -1.4}, 
    // 80 & 80X
    {-2, -1.9792, -1.9168, -1.813, -1.6684, -1.4835, -1.2595, -0.998,
    -0.7013, -0.3728, -0.0175, 0.3577, 0.7425, 1.1224, 1.476, 1.771, 1.9602,
    1.9899, 1.8487, 1.5828, 1.2445, 0.8706, 0.4855, 0.1058, -0.257, -0.5951,
    -0.9028, -1.1764, -1.4131, -1.6112, -1.7693, -1.8868, -1.963, -1.9977,
    -1.9907, -1.9422, -1.8522, -1.7211, -1.5496, -1.3385, -1.0892, -0.8039,
    -0.4856, -0.1385, 0.231, 0.6139, 0.9975, 1.3628, 1.6818, 1.9125, 2,
    1.9125, 1.6818, 1.3628, 0.9975, 0.6139, 0.231, -0.1385, -0.4856,
    -0.8039, -1.0892, -1.3385, -1.5496, -1.7211, -1.8522, -1.9422, -1.9907,
    -1.9977, -1.963, -1.8868, -1.7693, -1.6112, -1.4131, -1.1764, -0.9028,
    -0.5951, -0.257, 0.1058, 0.4855, 0.8706, 1.2445, 1.5828, 1.8487, 1.9899,
    1.9602, 1.771, 1.476, 1.1224, 0.7425, 0.3577, -0.0175, -0.3728, -0.7013,
    -0.998, -1.2595, -1.4835, -1.6684, -1.813, -1.9168, -1.9792, -2}, 
    // 100
    {-2.8, -2.7717, -2.687, -2.546, -2.3492, -2.0974, -1.7917, -1.4339,
    -1.0269, -0.5748, -0.0835, 0.438, 0.9769, 1.5143, 2.0213, 2.4532,
    2.7385, 2.7843, 2.5691, 2.1764, 1.6884, 1.1574, 0.6165, 0.0875, -0.415,
    -0.881, -1.3036, -1.6781, -2.0014, -2.2713, -2.4866, -2.6462, -2.7497,
    -2.7969, -2.7874, -2.7215, -2.5992, -2.421, -2.1874, -1.8994, -1.5588,
    -1.1678, -0.7302, -0.2512, 0.2615, 0.7964, 1.3369, 1.858, 2.3213,
    2.6655, 2.8, 2.6655, 2.3213, 1.858, 1.3369, 0.7964, 0.2615, -0.2512,
    -0.7302, -1.1678, -1.5588, -1.8994, -2.1874, -2.421, -2.5992, -2.7215,
    -2.7874, -2.7969, -2.7497, -2.6462, -2.4866, -2.2713, -2.0014, -1.6781,
    -1.3036, -0.881, -0.415, 0.0875, 0.6165, 1.1574, 1.6884, 2.1764, 2.5691,
    2.7843, 2.7385, 2.4532, 2.0213, 1.5143, 0.9769, 0.438, -0.0835, -0.5748,
    -1.0269, -1.4339, -1.7917, -2.0974, -2.3492, -2.546, -2.687, -2.7717,
    -2.8}};
        
    if (capto_size < 0 || capto_size > 5) return;
    
	if (enable) { 
		
		q = fmod(spindle_revs, 1) * 100.0;
		a = fmod(spindle_revs, 1) * 2 * M_PI;
		i = floor(q);
		f = fmod(q, 1);

		dx = X[capto_size][i] + f * (X[capto_size][i+1] - X[capto_size][i]);
		dy = Y[capto_size][i] + f * (Y[capto_size][i+1] - Y[capto_size][i]);
		dr = R[capto_size][i] + f * (R[capto_size][i+1] - R[capto_size][i]);
		if (enable_taper){
			//shank angle = 1 26' 21" +/- 25"
			//socket angle = 1 25' 31" +/- 25" - using this one
			double t;
			t = z_pos_rel * tan(1.4252778);
			dx -= t * cos(a);
			dy -= t * sin(a);
			dr -= t;
		}
		dx_counts = dx * counts_scale;
		dy_counts = dy * counts_scale;
		dr_counts = dr * counts_scale;
	} else {
		dx = 0;
		dy = 0;
		dr = 0;
		dx_counts = dx * counts_scale;
		dy_counts = dy * counts_scale;
		dr_counts = dr * counts_scale;
	}
}
